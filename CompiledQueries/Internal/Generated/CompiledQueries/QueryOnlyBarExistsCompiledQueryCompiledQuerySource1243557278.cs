// <auto-generated/>
#pragma warning disable
using CustomCompiledQueries;
using Marten.Linq.QueryHandlers;
using System;

namespace Marten.Generated.CompiledQueries
{
    // START: QueryOnlyBarExistsCompiledQueryCompiledQuery1243557278
    public class QueryOnlyBarExistsCompiledQueryCompiledQuery1243557278 : Marten.Internal.CompiledQueries.StatelessCompiledQuery<bool, CustomCompiledQueries.BarExistsCompiledQuery>
    {
        private readonly Marten.Linq.QueryHandlers.IQueryHandler<bool> _inner;
        private readonly CustomCompiledQueries.BarExistsCompiledQuery _query;

        public QueryOnlyBarExistsCompiledQueryCompiledQuery1243557278(Marten.Linq.QueryHandlers.IQueryHandler<bool> inner, CustomCompiledQueries.BarExistsCompiledQuery query) : base(inner, query)
        {
            _inner = inner;
            _query = query;
        }



        public override void ConfigureCommand(Weasel.Postgresql.ICommandBuilder builder, Marten.Internal.IMartenSession session)
        {
            var parameters1 = builder.AppendWithParameters(@"select TRUE as result from public.mt_doc_bar as d where (d.data ->> 'Status' = ^ and d.data ->> 'Name' = ^) LIMIT ^;", '^');
            parameters1[0].Value = "Active";
            parameters1[0].NpgsqlDbType = NpgsqlTypes.NpgsqlDbType.Varchar;

            parameters1[1].NpgsqlDbType = NpgsqlTypes.NpgsqlDbType.Text;
            parameters1[1].Value = _query.Name;
            parameters1[2].Value = 1;
            parameters1[2].NpgsqlDbType = NpgsqlTypes.NpgsqlDbType.Integer;
        }

    }

    // END: QueryOnlyBarExistsCompiledQueryCompiledQuery1243557278
    
    
    // START: QueryOnlyBarExistsCompiledQueryCompiledQuerySource1243557278
    public class QueryOnlyBarExistsCompiledQueryCompiledQuerySource1243557278 : Marten.Internal.CompiledQueries.CompiledQuerySource<bool, CustomCompiledQueries.BarExistsCompiledQuery>
    {
        private readonly Marten.Linq.QueryHandlers.IQueryHandler<bool> _queryHandler;

        public QueryOnlyBarExistsCompiledQueryCompiledQuerySource1243557278(Marten.Linq.QueryHandlers.IQueryHandler<bool> queryHandler)
        {
            _queryHandler = queryHandler;
        }



        public override Marten.Linq.QueryHandlers.IQueryHandler<bool> BuildHandler(CustomCompiledQueries.BarExistsCompiledQuery query, Marten.Internal.IMartenSession session)
        {
            return new Marten.Generated.CompiledQueries.QueryOnlyBarExistsCompiledQueryCompiledQuery1243557278(_queryHandler, query);
        }

    }

    // END: QueryOnlyBarExistsCompiledQueryCompiledQuerySource1243557278
    
    
}

